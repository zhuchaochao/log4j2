<?xml version="1.0" encoding="UTF-8"?>
<!--设置log4j2的自身log级别为status=warn -->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置， 当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration status="warn" monitorInterval="30" packages="com.ctsy.microservice.common.log4j2">	
	<!-- 全局参数 -->
    <Properties>
<!--         <property name="app.name" value="service.master-data" /> -->
        <property name="appName" value="${spring:spring.application.name}" />
        <property name="localIp" value="${spring:localIp}" />
		<property name="log.path" value="./logs" />
<!-- 		<Property name="pattern">%-5p|%X{requestId}|%d{yyyy-MM-dd HH:mm:ss.SSS}|${app.name}|%t|%X{clientIp}|%c{36}|%M|%L|%m||%n</Property> -->
		<Property name="pattern">%-5p|%X{requestId}|%d{yyyy-MM-dd HH:mm:ss.SSS}|${appName}|${localIp}|%t|%X{clientIp}|%c{36}|%M|%L|%m||%n</Property>
    </Properties>
	<appenders>
		<!--这个输出控制台的配置 -->
		<console name="Console" target="SYSTEM_OUT">
			<!--输出日志的格式 -->
			<PatternLayout	pattern="${pattern}" />
		</console>
		
		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用
		<File name="log" fileName="${log.path}/test.log" append="false">
			<PatternLayout	pattern="${pattern}" />
		</File>
		 -->
		 
		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size， 则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="FrameInfo"
			fileName="${log.path}/info-frame.log"
			filePattern="${log.path}/$${date:yyyy-MM}/info-frame-%d{yyyy-MM-dd'T'HH}-%i.log">
			<Filters>
				<!--ThresholdFilter默认值 onMatch="NEUTRAL" onMismatch="DENY"-->
				<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->				
				<ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
			<PatternLayout	pattern="${pattern}" />
			<DefaultRolloverStrategy max="100" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>
		<RollingFile name="FrameWarn"
			fileName="${log.path}/warn-frame.log"
			filePattern="${log.path}/$${date:yyyy-MM}/warn-frame-%d{yyyy-MM-dd'T'HH}-%i.log">
			<Filters>
				<ThresholdFilter level="WARN"/>
				<ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL" />
			</Filters>
			<PatternLayout	pattern="${pattern}" />
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
			<DefaultRolloverStrategy max="100" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>
		<RollingFile name="FrameError"
			fileName="${log.path}/error-frame.log"
			filePattern="${log.path}/$${date:yyyy-MM}/error-frame-%d{yyyy-MM-dd'T'HH}-%i.log">
			<ThresholdFilter level="ERROR" />
			<PatternLayout	pattern="${pattern}" />
			<DefaultRolloverStrategy max="100" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>			
		</RollingFile>
		
		<RollingFile name="AppInfo"
			fileName="${log.path}/info-biz.log"
			filePattern="${log.path}/$${date:yyyy-MM}/info-biz-%d{yyyy-MM-dd'T'HH}-%i.log">
			<Filters><!-- 排在info之前的level都记录日志文件 -->
				<ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
			<PatternLayout	pattern="${pattern}" />
			<DefaultRolloverStrategy max="100" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>
		
		<RollingFile name="AppError"
			fileName="${log.path}/error-biz.log"
			filePattern="${log.path}/$${date:yyyy-MM}/error-biz-%d{yyyy-MM-dd'T'HH}-%i.log">
			<Filters>
				<ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
			<PatternLayout	pattern="${pattern}" />
			<DefaultRolloverStrategy max="100" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>

	</appenders>
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<root level="INFO">
			<appender-ref ref="Console" />
			<appender-ref ref="FrameInfo" />
			<appender-ref ref="FrameWarn" />
			<appender-ref ref="FrameError" />
		</root>
		
		<!--过滤掉spring和hibernate的一些无用的debug信息 -->
		<logger name="org.springframework" level="INFO"/>
		<logger name="org.mybatis" level="INFO"/>
		
		<logger name="com.alibaba" level="OFF"/>
		
		<!-- 业务日志 -->
		<logger name="com.ctsy" level="DEBUG" additivity="false">
			<appender-ref ref="AppInfo" />
			<appender-ref ref="AppError" />
			<appender-ref ref="Console" />
		</logger>
		
	</loggers>

</configuration>